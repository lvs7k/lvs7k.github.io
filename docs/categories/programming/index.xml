<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on lvs7k&#39;s blog</title>
    <link>https://lvs7k.github.io/categories/programming/</link>
    <description>Recent content in Programming on lvs7k&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 02 Jan 2019 23:05:03 +0900</lastBuildDate>
    
	<atom:link href="https://lvs7k.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Haskellでオンライン対戦じゃんけんゲーム</title>
      <link>https://lvs7k.github.io/posts/2019/online-rock-paper-scissors/</link>
      <pubDate>Wed, 02 Jan 2019 23:05:03 +0900</pubDate>
      
      <guid>https://lvs7k.github.io/posts/2019/online-rock-paper-scissors/</guid>
      <description>マルチスレッドプログラミング難しい  forkFinallyとかwithAsyncとかraceとかconcurrentlyとかどれを使えば良いのか 検索してもちょうどいい教材的なコードが見つからない race_ (putStrLn =&amp;lt;&amp;lt; getLine) (return ())がgetLineの終了を待つのはなぜ？  コード  nc localhost 1234で起動 バグあり  Main.hs: &amp;lt;socket: 444&amp;gt;: commitBuffer: invalid argument (Invalid argument) なにこれ？   {-# OPTIONS_GHC -fno-warn-warnings-deprecations #-} {-# LANGUAGE RecordWildCards #-} module Main where import Control.Exception import Control.Monad import Control.Monad.STM import Control.Concurrent import Control.Concurrent.Async import Control.Concurrent.STM import Data.Unique import Network import System.IO import Text.Printf import qualified Data.Map.Strict as M main :: IO () main = withSocketsDo $ do global &amp;lt;- newGlobal forkIO $ monitorClients global socket &amp;lt;- listenOn (PortNumber 1234) putStrLn &amp;quot;Listening on port 1234 .</description>
    </item>
    
    <item>
      <title>2018年12月 開発環境構築メモ(Windows7)</title>
      <link>https://lvs7k.github.io/posts/2018/set-up-dev-env/</link>
      <pubDate>Sun, 23 Dec 2018 12:50:53 +0900</pubDate>
      
      <guid>https://lvs7k.github.io/posts/2018/set-up-dev-env/</guid>
      <description>ユーザ環境変数 PATH = C:\PortableGit\cmd;D:\stack\local\bin;D:\scoop\shims; MSYS2_PATH_TYPE = inherit SCOOP = D:\scoop STACK_ROOT = D:\sr  インストール  PortableGit MSYS2 Scoop The Haskell Tool Stack Visual Studio Code  Stack  $STACK_ROOT/config.yaml  # This file contains default non-project-specific settings for &#39;stack&#39;, used # in all projects. For more information about stack&#39;s configuration, see # http://docs.haskellstack.org/en/stable/yaml_configuration/ # The following parameters are used by &amp;quot;stack new&amp;quot; to automatically fill fields # in the cabal config.</description>
    </item>
    
    <item>
      <title>Hugoでこのブログを作った時のメモ</title>
      <link>https://lvs7k.github.io/posts/2018/how-to-create-this-blog/</link>
      <pubDate>Sat, 10 Nov 2018 17:10:21 +0900</pubDate>
      
      <guid>https://lvs7k.github.io/posts/2018/how-to-create-this-blog/</guid>
      <description>Quick Start | Hugo
環境  Windows 7 Chocolatey v0.10.11 git 2.19.1 hugo 0.49  Hugoのインストール  Chocolateyをインストール
 Chocolateyでgitをインストール
 choco install git  ChocolateyでHugoをインストール
 choco install hugo -confirm  GitHubでリポジトリ作成
 Repository name : &amp;lt;username&amp;gt;.github.io Initialize this repository with a READMEにチェックを入れた   Hugoで静的サイト生成  サイト作成
 hugo new site &amp;lt;フォルダ名&amp;gt; cd &amp;lt;フォルダ名&amp;gt; git init  テーマの追加
 git add submodule https://github.com/dplesca/purehugo.git themes/purehugo  コンフィグ設定
 config.</description>
    </item>
    
  </channel>
</rss>